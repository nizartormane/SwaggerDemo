name: Deploy to AWS ECR

on:
  push:
    branches:
      - main       
 
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository   
      uses: actions/checkout@v2

    - name: Get modified services
      id: changed-files
      run: |
        echo "Checking for modified services..."
        MODIFIED_SERVICES=""
        
        if git diff --name-only HEAD^ HEAD | grep -q "src/SwaggerDemo.AuthServer/"; then
          MODIFIED_SERVICES="$MODIFIED_SERVICES v-auth"
        fi
        if git diff --name-only HEAD^ HEAD | grep -q "src/SwaggerDemo.DbMigrator/"; then
          MODIFIED_SERVICES="$MODIFIED_SERVICES v-dbmigrator"
        fi
        if git diff --name-only HEAD^ HEAD | grep -q "src/SwaggerDemo.HttpApi.Host/"; then
          MODIFIED_SERVICES="$MODIFIED_SERVICES v-http"
        fi
        echo "MODIFIED_SERVICES=$MODIFIED_SERVICES" >> $GITHUB_ENV

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      run: |
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

    - name: Build and push modified Docker images
      run: |
        ECR_REPO="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/swaggerdemo123"
        
        for SERVICE in $MODIFIED_SERVICES; do
          case $SERVICE in
            v-auth)
              docker build -t v-auth -f src/SwaggerDemo.AuthServer/Dockerfile .
              docker tag v-auth $ECR_REPO:v-auth
              docker push $ECR_REPO:v-auth
              ;;
            v-dbmigrator)
              docker build -t v-dbmigrator -f src/SwaggerDemo.DbMigrator/Dockerfile .
              docker tag v-dbmigrator $ECR_REPO:v-dbmigrator
              docker push $ECR_REPO:v-dbmigrator
              ;;
            v-http)
              docker build -t v-http -f src/SwaggerDemo.HttpApi.Host/Dockerfile .
              docker tag v-http $ECR_REPO:v-http
              docker push $ECR_REPO:v-http
              ;;
          esac
        done

    - name: Logout from Amazon ECR
      run: docker logout ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com





# name: Deploy to AWS ECR

# on:
#   push:
#     branches:
#       - main       
 
# jobs:
#   deploy:
     
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v2

#     - name: Configure AWS credentials
#       uses: aws-actions/configure-aws-credentials@v2
#       with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: ${{ secrets.AWS_REGION }}

#     - name: Login to Amazon ECR
#       run: |
#         aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

#     - name: Build and push Docker images
#       run: |
#         ECR_REPO="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/swaggerdemo123"
        
#         docker build -t v-auth -f src/SwaggerDemo.AuthServer/Dockerfile .
#         docker build -t v-dbmigrator -f src/SwaggerDemo.DbMigrator/Dockerfile .
#         docker build -t v-http -f src/SwaggerDemo.HttpApi.Host/Dockerfile .

#         docker tag v-auth $ECR_REPO:v-auth
#         docker tag v-dbmigrator $ECR_REPO:v-dbmigrator
#         docker tag v-http $ECR_REPO:v-http

#         docker push $ECR_REPO:v-auth
#         docker push $ECR_REPO:v-dbmigrator
#         docker push $ECR_REPO:v-http        

#     - name: Logout from Amazon ECR
#       run: docker logout ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com