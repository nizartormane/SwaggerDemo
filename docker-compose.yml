# version: '3.3'    
# services:
#   yourservice:
#     build:
#       context: ./
#       dockerfile: ./src/SwaggerDemo.HttpApi.Host/Dockerfile






# version: '3.4'
# services:
#   http.host:
#     image: abpdockerhttp
#     ports:
#       - 9005:80     
#     build:
#       context: ./ 
#       dockerfile: ./src/SwaggerDemo.HttpApi.Host/Dockerfile

#   dbmigrator:
#     image: abpdockerdbmigrator
#     build:
#       context: ./ 
#       dockerfile: ./src/SwaggerDemo.DbMigrator/Dockerfile
#     depends_on:
#       - redis

 



 # version: '3.3'  2

# services:
#   redis:
#     image: redis:alpine
#     container_name: redis
#     restart: always
#     ports:
#       - "6379:6379"

#   swaggerdemo:
#     build:
#       context: ./ 
#       dockerfile: ./src/SwaggerDemo.HttpApi.Host/Dockerfile
#     depends_on:
#       - redis
#     environment:
#       - App__CorsOrigins=https://*.SwaggerDemo.com
#       - ConnectionStrings__Default=Server=localhost,1433;Database=master;User Id=sa;Password=YourStrong@Passw0rd;Encrypt=False;TrustServerCertificate=True;
#       - Redis__Configuration=127.0.0.1
#       - AuthServer__Authority=https://localhost:44348
#       - AuthServer__RequireHttpsMetadata=true
#       - AuthServer__SwaggerClientId=SwaggerDemo_Swagger
#       - StringEncryption__DefaultPassPhrase=kZA7qZ1dClqxc5Qs
#     ports:
#       - "8080:80"
#       - "8443:443"




# version: '3.3'  3

# services:
#   redis:
#     image: redis:alpine
#     container_name: redis
#     restart: always
#     ports:
#       - "6379:6379"

#   swaggerdemo:
#     build:
#       context: . 
#       dockerfile: ./src/SwaggerDemo.HttpApi.Host/Dockerfile
#     depends_on:
#       - redis
#     environment:
#       - App__CorsOrigins=https://*.SwaggerDemo.com
#       - ConnectionStrings__Default=Server=localhost,1433;Database=master;User Id=sa;Password=YourStrong@Passw0rd;Encrypt=False;TrustServerCertificate=True;
#       - Redis__Configuration=127.0.0.1
#       - AuthServer__Authority=https://localhost:44348
#       - AuthServer__RequireHttpsMetadata=true
#       - AuthServer__SwaggerClientId=SwaggerDemo_Swagger
#       - StringEncryption__DefaultPassPhrase=kZA7qZ1dClqxc5Qs
#     ports:
#       - "8080:80"
#       - "8443:443"  

 




version: '3.8'

services:
  httpservice:
    build:
      context: ./ 
      dockerfile: ./src/SwaggerDemo.HttpApi.Host/Dockerfile
  
    environment: 
      - App__CorsOrigins=https://*.SwaggerDemo.com
      - ConnectionStrings__Default=Server=sqlserver,1433;Database=master;User Id=sa;Password=YourStrong@Passw0rd;Encrypt=False;TrustServerCertificate=True;
      - Redis__Configuration=redis:6379
      - AuthServer__Authority=https://localhost:44348
      - AuthServer__RequireHttpsMetadata=true
      - AuthServer__SwaggerClientId=SwaggerDemo_Swagger
      - StringEncryption__DefaultPassPhrase=kZA7qZ1dClqxc5Qs
    depends_on:
      - sqlserver
      - redis
      
    networks:
      - backend

  dbmigrator:
    build:
      context: ./ 
      dockerfile: ./src/SwaggerDemo.DbMigrator/Dockerfile
      
    depends_on:
      - sqlserver
      - redis
      
    networks:
      - backend

  sqlserver:
    image: "mcr.microsoft.com/mssql/server:2019-latest"
    container_name: "sqlserver_container"
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: "YourStrong@Passw0rd"
      ACCEPT_EULA: "Y"
    networks:
      - backend

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    networks:
      - backend

networks:
  backend:
    driver: bridge







# services:        true
#   httpservice:
#     build:
#       context: ./ 
#       dockerfile: ./src/SwaggerDemo.HttpApi.Host/Dockerfile
  
#     environment: 
#       - App__CorsOrigins=https://*.SwaggerDemo.com
#       - ConnectionStrings__Default=Server=localhost,1433;Database=master;User Id=sa;Password=YourStrong@Passw0rd;Encrypt=False;TrustServerCertificate=True;
#       - Redis__Configuration=127.0.0.1
#       - AuthServer__Authority=https://localhost:44348
#       - AuthServer__RequireHttpsMetadata=true
#       - AuthServer__SwaggerClientId=SwaggerDemo_Swagger
#       - StringEncryption__DefaultPassPhrase=kZA7qZ1dClqxc5Qs
#     depends_on:
#       - redis
#       - dbmigrator
#   dbmigrator:
#     build:
#       context: ./ 
#       dockerfile: ./src/SwaggerDemo.DbMigrator/Dockerfile
   
  
#     depends_on:
#       - redis
#   redis:
#     image: "redis:alpine"
#     ports:
#       - "6379:6379"
# networks:
#   backend:
#     driver: bridge












# version: '3.8'

# services:
#   yourservice:
#     build:
#       context: ./ 
#       dockerfile: ./src/SwaggerDemo.HttpApi.Host/Dockerfile
#     ports:
#       - "5001:5000"
#     environment:
#       - ASPNETCORE_ENVIRONMENT=Development
#     depends_on:
#       - redis
#       - dbmigrator

#   dbmigrator:
#     build:
#       context: ./ 
#       dockerfile: ./src/SwaggerDemo.DbMigrator/Dockerfile
#     environment:
#       - ASPNETCORE_ENVIRONMENT=Development
#     depends_on:
#       - redis

#   redis:
#     image: "redis:alpine"
#     ports:
#       - "6379:6379"



# version: '3.3'

# services:
#   redis:
#     image: redis:alpine
#     container_name: redis
#     restart: always
#     ports:
#       - "6379:6379"

#   sqlserver:
#     image: mcr.microsoft.com/mssql/server:2022-latest
#     container_name: sqlserver
#     environment:
#       - ACCEPT_EULA=Y
#       - SA_PASSWORD=YourStrong@Passw0rd
#     ports:
#       - "1433:1433"
#     networks:
#       - backend
#     restart: always

#   swaggerdemo:
#     build:
#       context: ./ 
#       dockerfile: ./src/SwaggerDemo.HttpApi.Host/Dockerfile
#     depends_on:
#       - redis
#       - sqlserver
#     environment:
#       - App__CorsOrigins=https://*.SwaggerDemo.com
#       - ConnectionStrings__Default=Server=sqlserver,1433;Database=master;User Id=sa;Password=YourStrong@Passw0rd;Encrypt=False;TrustServerCertificate=True;
#       - Redis__Configuration=127.0.0.1
#       - AuthServer__Authority=https://localhost:44348
#       - AuthServer__RequireHttpsMetadata=true
#       - AuthServer__SwaggerClientId=SwaggerDemo_Swagger
#       - StringEncryption__DefaultPassPhrase=kZA7qZ1dClqxc5Qs
#     ports:
#       - "8080:80"
#       - "8443:443"
#     networks:
#       - backend
#     command: ["dotnet", "SwaggerDemo.HttpApi.Host.dll"]

#   dbmigrator:
#     image: mcr.microsoft.com/dotnet/sdk:8.0
#     container_name: dbmigrator
#     build:
#       context: ./
#       dockerfile: ./src/SwaggerDemo.DbMigrator/Dockerfile
#     depends_on:
#       - sqlserver
#     environment:
#       - ConnectionStrings__Default=Server=sqlserver,1433;Database=master;User Id=sa;Password=YourStrong@Passw0rd;Encrypt=False;TrustServerCertificate=True;
#     networks:
#       - backend
#     command: ["dotnet", "SwaggerDemo.DbMigrator.dll"]
#     restart: "on-failure"

# networks:
#   backend:
#     driver: bridge





# version: '3.3'  1

# services:
#   redis:
#     image: redis:alpine
#     container_name: redis
#     restart: always
#     ports:
#       - "6379:6379"

#   swaggerdemo:
#     build:
#       context: ./
#       dockerfile: ./src/SwaggerDemo.HttpApi.Host/Dockerfile
#     depends_on:
#       - redis
#     environment:
#       - ASPNETCORE_ENVIRONMENT=Production
#       - Redis__Configuration=redis:6379  # Vérifie cette variable dans ton `appsettings.json`
#     ports:
#       - "8080:80"
#       - "8443:443"




#   dbmigrator:
#     build:
#       context: . 
#       dockerfile: ./src/SwaggerDemo.DbMigrator/Dockerfile
#     depends_on:
#       - redis
#     environment:
#       - ConnectionStrings__Default=Server=localhost,1433;Database=master;User Id=sa;Password=YourStrong@Passw0rd;Encrypt=False;TrustServerCertificate=True;
#     # Tu peux aussi définir d'autres variables d'environnement spécifiques à la migration
#     command: ["dotnet", "SwaggerDemo.DbMigrator.dll"]  # Commande pour lancer la migration de la DB
#     # Si tu veux, tu peux lier des volumes pour persister les données de migrations
#     volumes:
#       - ./migrations:/app/migrations  # Exemple pour persister les fichiers de migrations, si nécessaire
